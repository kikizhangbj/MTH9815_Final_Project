ReadMe

Hi Breman,
Let me briefly go through my final project with you.

I. Class definitions and the corresponding files
A. TradeBookService, PositionService & RiskService
	•	BondTradeBookingService and BondTradeBookingConnector are defined in “tradebookingservice.hpp”.
	•	BondPositionService is defined in “positionservice.hpp”. BondTradeServiceListener is defined in “BondTradeServiceListener.hpp”. There is no connector class of the position service since data will flow from BondTradeBookingService through listener.
	•	BondRiskService is defined in “riskservice.hpp”. Data from BondPositionService flows through BondPositionServiceListener in “BondPositionServiceListener.hpp” to the risk service.

Note:

B. PricingService & StreamingService
	•	BondPricingService and BondPricingConnector are defined in “pricingservice.hpp”.
	•	BondStreamingService is defined in “streamingservice.hpp”. BondAlgoStreamingService is defined in “BondAlgoStreamingService.hpp”. They are connected with pricing service through BondPricingListener defined in “BondPricingListener.hpp”.

C. MarketDataService & ExecutionService
	•	BondMarketDataService and BondMarketDataConnector are defined in “marketdataservice.hpp”.
	•	BondExecutionService is defined in “executionservice.hpp”. BondAlgoExecutionService is defined in “AlgoExecutionService.hpp”. They are connected with market data service through MarketDataListener defined in “BondMarketDataListener.hpp”.

D. InquiryService
	•	BondInquiryService and BondInquiryServiceConnector are defined in “inquiryservice.hpp”.

E. HistoricalDataService
	•	BondHistoricalPositionDataConnector and BondHistoricalPositionDataService are defined in “historicaldataservice.hpp”. PositionDataListener defined in “PositionDataListener.hpp” connects historical position data service to position service.
	•	BondHistoricalRiskDataConnector and BondHistoricalRiskDataService are defined in “historicaldataservice.hpp”. RiskListener defined in “RiskListener.hpp” connects historical risk data to risk service.
	•	BondHistoricalExecutionDataConnector and BondHistoricalExecutionDataService are defined in “historicaldataservice.hpp”. ExecutionListener defined in “ExecutionListener.hpp” connects historical execution data to execution service.
	•	BondHistoricalStreamingDataConnector and BondHistoricalStreamingDataService are defined in “historicaldataservice.hpp”. StreamingListener defined in “StreamingListener.hpp” connects historical streaming data to streaming service.
	•	BondHistoricalInquiryDataConnector and BondHistoricalInquiryDataService are defined in “historicaldataservice.hpp”. InquiryListener defined in “InquiryListener.hpp” connects historical inquiry data to inquiry service.


II. Input files:
trades.txt
marketdata.txt
prices.txt
inquiries.txt
	•	The input files are generated by using code from my fellow classmates. 
	•	marketdata.txt is simplified. However, since it doesn’t allowed for orders with same depth, the AggregateDepth function is left undefined.
	•	All the ReadFile functions are modified to correspond to the files generated.

III. Output files:
allinquires.txt
execution.txt
position.txt
risk.txt
streaming.txt
	•	All the output files can be found in the folder “Output_Files”.

Since I feel very uncomfortable sitting and sleeping during the last few weeks of this semester, I received a lot of help from my fellow classmates on understanding and completing this final project. I really appreciate that. And I also would like to thank you for your support and kindness!:)

Best wishes,
Kiki (Mengqi Zhang)
